package br.com.elvisassis.infrastructure.kafka;import br.com.elvisassis.domain.service.CourierDeliveryService;import br.com.elvisassis.infrastructure.event.DeliveryFulfilledIntegrationEvent;import br.com.elvisassis.infrastructure.event.DeliveryPickUpIntegrationEvent;import br.com.elvisassis.infrastructure.event.DeliveryPlacedIntegrationEvent;import io.smallrye.reactive.messaging.annotations.Blocking;import jakarta.enterprise.context.ApplicationScoped;import jakarta.inject.Inject;import lombok.extern.slf4j.Slf4j;import org.eclipse.microprofile.reactive.messaging.Incoming;@Slf4j@ApplicationScopedpublic class KafkaDeliveriesMessageHandler {    @Inject    CourierDeliveryService courierDeliveryService;    @Incoming("delivery-placed-events")    @Blocking // garante que a execução ocorra em uma thread de worker (para chamadas bloqueantes)    public void handle(DeliveryPlacedIntegrationEvent event) {        log.info("Received: {}", event);        courierDeliveryService.assign(event.getDeliveryId());    }    @Incoming("delivery-pick-up-events")    @Blocking    public void handle(DeliveryPickUpIntegrationEvent event) {        log.info("Received: {}", event);    }    @Incoming("delivery-fulfilled-events")    @Blocking    public void handle(DeliveryFulfilledIntegrationEvent event) {        log.info("Received: {}", event);        courierDeliveryService.fulfill(event.getDeliveryId());    }}