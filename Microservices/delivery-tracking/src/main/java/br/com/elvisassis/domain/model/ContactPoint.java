package br.com.elvisassis.domain.model;import jakarta.persistence.Embeddable;import java.util.Objects;@Embeddablepublic class ContactPoint {    public ContactPoint(String zipCode, String street, String number, String complement, String name, String phone) {        this.zipCode = zipCode;        this.street = street;        this.number = number;        this.complement = complement;        this.name = name;        this.phone = phone;    }    public static ContactPoint of(String zipCode, String street, String number, String complement, String name, String phone) {        return new ContactPoint(zipCode, street, number, complement, name, phone);    }    public ContactPoint() {    }    private String zipCode;    private String street;    private String number;    private String complement;    private String name;    private String phone;    public String getZipCode() {        return zipCode;    }    public String getStreet() {        return street;    }    public String getNumber() {        return number;    }    public String getComplement() {        return complement;    }    public String getName() {        return name;    }    public String getPhone() {        return phone;    }    @Override    public boolean equals(Object object) {        if (!(object instanceof ContactPoint that)) return false;        return Objects.equals(getZipCode(), that.getZipCode()) && Objects.equals(getStreet(), that.getStreet()) && Objects.equals(getNumber(), that.getNumber()) && Objects.equals(getComplement(), that.getComplement()) && Objects.equals(getName(), that.getName()) && Objects.equals(getPhone(), that.getPhone());    }    @Override    public int hashCode() {        return Objects.hash(getZipCode(), getStreet(), getNumber(), getComplement(), getName(), getPhone());    }}