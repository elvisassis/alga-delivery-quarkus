package br.com.elvisassis.infrastructure.kafka;import br.com.elvisassis.domain.events.DeliveryFulfilledEvent;import br.com.elvisassis.domain.events.DeliveryPickUpEvent;import br.com.elvisassis.domain.events.DeliveryPlacedEvent;import jakarta.enterprise.context.ApplicationScoped;import jakarta.enterprise.event.Observes;import org.eclipse.microprofile.reactive.messaging.Channel;import org.eclipse.microprofile.reactive.messaging.Emitter;@ApplicationScopedpublic class DeliveryEventPublisher {    @Channel("delivery-events")    Emitter<Object> emitter;    public void onDeliveryPlaced(@Observes DeliveryPlacedEvent event) {        emitter.send(event);    }    public void onDeliveryPickUp(@Observes DeliveryPickUpEvent event) {        emitter.send(event);    }    public void onDeliveryFulfilled(@Observes DeliveryFulfilledEvent event) {        emitter.send(event);    }}